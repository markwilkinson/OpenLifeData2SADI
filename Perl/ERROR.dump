$VAR1 = bless( {
                 'query' => 'PREFIX  dc:   <http://protege.stanford.edu/plugins/owl/dc/protege-dc.owl#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  sadi: <http://sadiframework.org/ontologies/sadi.owl#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  serv: <http://www.mygrid.org.uk/mygrid-moby-service#>
SELECT distinct(?s1) ?output_type ?name1 ?desc1 ?s2 ?name2 ?desc2
FROM <http://sadiframework.org/registry/>
WHERE
  { ?s1 rdf:type serv:serviceDescription .
    ?s2 rdf:type serv:serviceDescription .
?s1 serv:providedBy ?org .
?org dc:publisher "openlifedata2sadi.wilkinsonlab.info" .
    ?s1 serv:hasServiceDescriptionText ?desc1 .
    ?s2 serv:hasServiceDescriptionText ?desc2 .
    ?s2 serv:hasOperation ?operation2 .
    ?s1 serv:hasServiceNameText ?name1 .
    ?s2 serv:hasServiceNameText ?name2 .

    ?s1 sadi:decoratesWith ?blank .
    ?blank owl:someValuesFrom ?output_type .

    ?operation2 serv:inputParameter ?in2 .
    ?in2  serv:objectType ?output_type .

  } offset 0 limit 2000

',
                 'error' => undef,
                 'useragent' => bless( {
                                         'max_redirect' => 2,
                                         'ssl_opts' => {
                                                         'verify_hostname' => 1
                                                       },
                                         'protocols_forbidden' => undef,
                                         'show_progress' => undef,
                                         'handlers' => {},
                                         'no_proxy' => [],
                                         'protocols_allowed' => [
                                                                  'http',
                                                                  'https'
                                                                ],
                                         'local_address' => undef,
                                         'use_eval' => 1,
                                         'requests_redirectable' => [
                                                                      'GET',
                                                                      'HEAD'
                                                                    ],
                                         'timeout' => 380000,
                                         'def_headers' => bless( {
                                                                   'user-agent' => 'RDF::Query::Client/0.112 (cpan:TOBYINK) libwww-perl/6.03',
                                                                   'accept' => 'application/sparql-results+xml, application/sparql-results+json;q=0.9, application/rdf+xml, application/x-turtle, text/turtle'
                                                                 }, 'HTTP::Headers' ),
                                         'proxy' => {},
                                         'max_size' => undef
                                       }, 'LWP::UserAgent' ),
                 'results' => []
               }, 'RDF::Query::Client' );
